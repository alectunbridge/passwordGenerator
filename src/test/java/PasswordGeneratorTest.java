/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import org.junit.Before;
import org.junit.Test;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

import java.util.Collections;

import static org.assertj.core.api.Assertions.assertThat;

public class PasswordGeneratorTest {


    PasswordGenerator passwordGenerator = new PasswordGenerator();


    @Test

    public void checkAmountOfNumbers() {
        String numbers = passwordGenerator.pickCharactersFromList(5, "1234567890");
        assertThat(numbers.length()).isEqualTo(5);
    }

    @Test

    public void checkAmountOfLetters() {
        String letters = passwordGenerator.pickCharactersFromList(3, "abcdefghijklmnopqrstuvwxyz");
        assertThat(letters.length()).isEqualTo(3);
    }

    @Test

    public void checkAmountOfSpecial() {
        String special = passwordGenerator.pickCharactersFromList(2, "!@Â£$%^&*()?");
        assertThat(special.length()).isEqualTo(2);
    }

    @Test

    public void checkPasswordLength() {

        assertThat(passwordGenerator.createStringOfRandomCharacters().length()).isEqualTo(3);

    }



    @Test
    public void checkSecretPassword() {
        BCryptPasswordEncoder bCryptPasswordEncoder = new BCryptPasswordEncoder();

        String actualPassword;

        while (true) {
            actualPassword = passwordGenerator.createStringOfRandomCharacters();
            System.out.println(actualPassword);

            if (bCryptPasswordEncoder.matches(actualPassword,
                    "$2a$10$N43LdqU9b1ZMuZM2KiBnIeaXiPqxYcTEVoMFabb9ZV2jfG82jupD6")) {
                break;
            }
        }

         assertThat(bCryptPasswordEncoder.matches(actualPassword,
                "$2a$10$N43LdqU9b1ZMuZM2KiBnIeaXiPqxYcTEVoMFabb9ZV2jfG82jupD6")).isTrue();
    }

    }

